        -:    0:Source:unittest4.c
        -:    0:Graph:unittest4.gcno
        -:    0:Data:unittest4.gcda
        -:    0:Runs:1
        -:    0:Programs:1
        -:    1:#include "assert.h"
        -:    2:#include "dominion.h"
        -:    3:#include "dominion_helpers.h"
        -:    4:#include <stdio.h>
        -:    5:#include "rngs.h"
        -:    6:#include <stdlib.h>
        -:    7:#
        -:    8:
function main called 1 returned 100% blocks executed 90%
        1:    9:int main () {
        -:   10:
        1:   11:	printf("TESTING updateCoins() \n");
call    0 returned 100%
        -:   12:	struct gameState g;
        1:   13:	int seed = 1000;
        -:   14:	
        1:   15:	int k[10] = {village, smithy, gardens, mine, feast, adventurer, council_room, salvager, sea_hag, steward};
        1:   16:	initializeGame(2, k, seed, &g);
call    0 returned 100%
        -:   17:	//initialize Hand with one gold
        1:   18:	g.handCount[0] = 1;
        1:   19:	g.hand[0][0] = gold;
        1:   20:	int r = 0;
        1:   21:	if(r == 0)
branch  0 taken 100% (fallthrough)
branch  1 taken 0%
        1:   22:		r = updateCoins(0, &g, 2);
call    0 returned 100%
        -:   23:	
        -:   24:	//check if update coins with bonus works by testing coins
        1:   25:	int Coins = g.coins;
        1:   26:	assert(Coins == 5);
branch  0 taken 0% (fallthrough)
branch  1 taken 100%
call    2 never executed
        1:   27:	printf("TEST PASSED\n");
call    0 returned 100%
        -:   28:
        -:   29:
        1:   30:	printf("--------------Test Complete-----------------------\n");
call    0 returned 100%
        -:   31:}
